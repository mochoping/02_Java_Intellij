package com.kh;
/*
 * package = 자바 파일이 작성된 폴더들을 나열해 놓은 이름
 * 폴더 명을 작성할 경우 . 은 폴더안에 폴더로 들어간다는 의미 이기 때문에,
 * com c.o.m.으로 구분지어서 작성하지 않아야 함.
 * c.o.m -> 상위에서 하위로 c, o, m 3폴더 정렬
 *
 * */
public class VaribleEx1 {

    public static void main(String[] args) {
        // 변수 : 메모리에 값을 저장하기 위한 공간
        // 		저잘되는 값이 변할 수 있기 때문에 변수라는 명을 사용
        // 프로젝트 하나하는데 왜이렇게 변수가 많은지 .. 와 같은 변수

        // 자료형(data type)
        //- 변수 또는 값의 크기와 형식

        /* ***** 자바 기본 자료형(java primitive types) *****
         * 자바에서 기본으로 제공하는 타입
         *
         * [논리형] - 맞는지 틀린지 유무
         * boolean (1byte) - ture / false *기본값은 false*
         *
         * [정수형] - 숫자
         * byte    (1byte)		숫자뒤 b B
         * short   (2byte)      숫자뒤 sh
         * int     (4byte)     *정수의 기본형태 제일 많이 사용*
         * long    (8byte)      숫자뒤 L
         *
         * [실수형] - 숫자뒤 소숫점 포함
         * float   (4byte)		숫자 뒤에 f 를 붙여줘야함
         * double  (8byte)     *실수 기본형태*
         *
         *
         * [문자형] - 문자로된 형태
         * char    (2byte)      문자 하나, 문자 양옆에 '' 붙여줌
         *
         *
         *
         * */
        // 변수선언 : 메모리 공간을 할당하기 위한 선언
        // 보라색으로 바뀌는 단어는 예약어
        boolean 진실혹은거짓 = true;
        System.out.println("진실 혹은 어직은 =>" + 진실혹은거짓);

        double 실수1번; // 메모리에 doublr 저장공간 8byte 할당하고 공간을 실수 1번으로 부르겠다.

        //값 다앱 : 변수에 값을 집어넣는것
        //이미 값이 있는 다른 변수에 대입하면 -> 덮어쓰기가 된것

        진실혹은거짓 = false;
        String 문자열1번 = "만들어진 객체로 예약어처럼 많이 사용";
        String 문자열2번 = "필수로 맨 앞 s는 대문자 표기 보라색으로 글자색 변화 없음";

        System.out.println("변수명에 노란색 밑줄은 변수를 선언하고 " + " 아래에서 사용하지 않은 변수명이라 는 표기");

        /*
         * boolean 이나 char string등은 단독으로
         * 예약어가 존재하기 때문에 상관없음
         *
         * 예약어(자료형,참조형) 변수명 = 리터럴;
         * [정수형]
         * 정수형 기본적으로 int 로 설정
         * int(4byte) 안에서 int 보다 byte 크기가 작은 short이나 byte 로 리터럴 변경할 경우
         * 자동 타입 변환이 일어나고, 값이 해당타입 범위를 초과하면 오류가 발생
         *
         * 예 )
         * byte 변수명 = int
         * byte 바이트 1번 = 123;  가능
         * byte 바이트 1번 = 1234;  불가능 강제 형변환을 사용하면 가능
         *
         *
         * long 변수명 = int
         * long   롱 1번 = 10000000000; // 불가능 강제형변환을 사용하면 가능
         * int 는 위에서 작성한 숫자 범위를 초과하기 때문에 초과하는 숫자를 담기 위해서는 뒤에 l이나 L 을 붙여주어야함.
         *
         *
         * long 변수명 = long
         * long   롱 1번 = 10000000000L; // long 사용 long 리터럴은 l필수로 뒤에 와야함.
         *
         *
         * [실수형]
         * 실수형 리터럴 기본적으로 double 타입으로 설정됨
         * float은 대략 소수점 7번쨰자리까지만 표기 가능
         *
         * 나머지 8자리부터 버리기 때문에 안전하게 가져올 수 있도록 double 기본으로 사용
         * 소수점 아래 소스들을 나타낼 때 8자리 이상이 아닌 경우
         * 숫자뒤 f를 붙여서 절반크기의 공간만 사용하겠다 표기
         *
         * 자료형   변수명 = 리터럴
         * double  변수명 = double
         * double 더블1번 = 3.14;
         *
         * float 플롯 1번 = 3.14f;
         * 플롯 1번 공간의 크기를 float으로 주고 실수 뒤에f를 붙여주지 않으면
         * 출력시 보여지지 않는다.
         *
         * */

        char 문자1번 = '가';
        char 문자2번 = 'a';
        // char 문자 3번 ="A"; char 문자에는 반드시 '' 감싸기

        float 소수1번 = 3.14f;//

        System.out.println(문자1번 + 문자2번 + 소수1번);


    }



}
