        Exception in thread "main" java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length 5
        컴퓨터가 예기치 못한 상황이 발생했고 해결해달라 구문생성.

        단축키 " ctrl + alt + t "
        감싸기를 해야하는 코드를 나중에 인지했을때도 사용 가능.



        예외 발생구문을 try-catch로 처리(예외처리)

        -try{} :예외가 발생할 수 있을것 같은 코드들을 시도하는 구문
                 (1) try ~ catch
                 (2) try ~ catch ~ catch ~ catch
                 (3) try ~ catch ~ ......~ finally
                 (4) try ~ catch ~ finally
                 (5) try ~ finally
        -catch(예외){} :
                try 안에 작성한 코드들을 실행하는 도중 문제가 발생했고, 발생한 문제가 예상했던 문제와 같으면 내가 생각한 문제가 맞아!
                catch(잡아서) Catch{}중괄호 안에 작성된 구문 수행
                -> 발생된 예외를 다른 방식으로 처리했기 때문에, 프로그램이 멈추지 않고 정상적으로 수행
                catch는 여러게 작성 가능.

                문제발생이 예상되는데, 예상이 되지 않는경우
                catch(Exception e){} 로 작성하면 문제는 잡힘.
        - finally{} :
                catch에 관계없이 마지막에 무조건적으로 실행하는 코드를 작성.
                선택적으로 작성하면되며,
                작성할경우
                (1) try ~ catch ~ finally
                (2) try ~ finally
                주로 사용하는 경우
                    외부 프로그램/ 장치의 연결을 강제적으로 끊어야 할 때 주로 사용



발생한 문제를 유연하게 처리할 것 try - catch

 e = exception or error
            print cnffur
            stack 메모리 stack 영역에 존재한,ㄴ
            trace 것을 추적하다

            호출한 기능 순서대로 타고 들어가서 발생한 예외(문제)들을 모두 추적해서
            개발자가 눈으로 확인 할 수 있도록 출력

