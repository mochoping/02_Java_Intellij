
Map 인터페이스를 구현한 가장 많이 사용되는 데이터 구조
키-값(key-value) 가 한쌍으로 데이터를 저장함

Map : 특정 키워드(key)를 입력하면 해당되는
      상세한 값(value)를 얻을 수 있는 컬렉션 객체
  K : v  형식으로 구성
  K : V 한 쌍 Entry 라 부름

    *Entry란?
        ->intrare
        ->가록 , 항목,등록, 입장하다 라는 뜻
        -> 데이터 구조에서는 데이터가 저장된 하난의 항목 기록한 단위들
        -> in안으로 trare들어가다
        -> 무언가가 안에 들어간 것 또는 등록된 목록
  K = key : 키워드 역활 (==변수명과 같음)
  1) 키의 명칭은 중복이 안됨
        -> 만약에 중복해서 키에다가 다른 value값을 작성할 경우
         -> 덮어쓰기됨
  2) 순서유지를 하지 않음 (단, LinkedHashMap 제외)

  Key만 묶어서 보면 Set과같이 중복을 허용하지 않는다는 특징을 가지고 있음
    -> Map.keySet() / Map.EntrySet() 제공

Value : 키워드에 해당하는 상세한 값
    - Key로 인해서 모든 Value가 구분 됨
    -> Map.get(Key) / Map.remove(Key) 형태로 사용
Map 인터페이스를 구현한 가장 많이 사용되는 데이터 구조
키-값(key-value) 가 한 쌍으로 데이터를 저장함


    주요 메서드(기능)
    put (Kkey, V value) : 키-값 쌍을 추가하거나 수정
    get (O key)         : 키에 해당하는 value (=값)을 반환
    remove (O key)      : 키 -값 쌍 제거
   containsKey(O key)   : 특정 키가 존재하는지 확인
   containsValue(O value) : 특정 값이 존재하는지 확인
   size()                 : 목록에 저장된 키-값 쌍이 몇개인지 개수로 반환
   isEmpty()              : 비어있는지 확인

---------------------------------------------------------------------------------------
                                keySet()                              entrySet()
반환데이터                   목록에 키만 모임               목록에 키-값 으로 모임
                                Set<key>                              Set<Map.Entry<key,value>>
주요 사용용도                키만 필요할 때 사용